name: Create Release
on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: ^1.17

      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o build/soar_linux soar.go
          GOOS=windows GOARCH=amd64 go build -o build/soar_win32.exe soar.go

      - name: Compress
        run: |
          upx build/soar_linux && chmod +x build/soar_linux
          upx build/soar_win32.exe && chmod +x build/soar_win32.exe

      - name: Changelog
        run: |
          sed -n "/^## ${{ github.ref_name }}/,/^## /{/^## /b;p}" CHANGELOG.md > ./RELEASE
          echo ::set-output name=version_name::`sed -nr "s/^## (${{ github.ref_name }} .*)$/\1/p" CHANGELOG.md`

      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ steps.extract_changelog.outputs.version_name }}
          body_path: ./RELEASE
          draft: true
          prerelease: false

      - name: Upload Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: soar_linux
          asset_path: build/soar_linux
          asset_content_type: application/octet-stream
          upload_url: ${{ steps.create_release.outputs.upload_url }}

      - name: Upload Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_name: soar_win32
          asset_path: build/soar_win32.exe
          asset_content_type: application/octet-stream
          upload_url: ${{ steps.create_release.outputs.upload_url }}
